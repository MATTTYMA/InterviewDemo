{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Interview Demo Docs","text":""},{"location":"#welcome","title":"Welcome","text":"<p>Welcome to my interview demo</p> <p>This documentation contains 2 parts.</p> Section Overview Part 1 A demo .net web api project, which Matt has currently working on Part 2 A sketch of a web-based system architecture that Matt have worked on"},{"location":"Demo/Background/","title":"Background","text":"<p>Matt has 2 very cute flufy cats, and he loves them pretty much more than everything else in his life.</p> <p>However, with the living cost spike, Matt found himself hard to maintain the cost of them because almost all cat supplies' subscription price been almost doubled. And Matt has to spend a lot of his time trying to find a better price on the market, which is ... well, quite stressful</p> <p>So Matt thinks that would it be a better idea build a market place platform which individuals and suppliers can listing, searching and bidding. </p>"},{"location":"Demo/Code/","title":"Code","text":"<p>MarketPlaceListing.Api GitHub Repository</p>"},{"location":"Demo/SystemDesign/","title":"SystemDesign","text":"<p>Add listing flow: <pre><code>sequenceDiagram\n    autonumber\n    User --&gt;&gt; MarketPlaceListing.Api: Create Listing item(s)\n    MarketPlaceListing.Api --&gt;&gt; MarketPlaceListing.Api: Generate listing uid for each listing item\n    MarketPlaceListing.Api --&gt;&gt; Kafka Cluster: Publish new listing topic(s)\n    MarketPlaceListing.Api --&gt;&gt; User: Acknowledge user listing creation pending with elastic listing dto response\n    Kafka Cluster --&gt;&gt; ListingEventIngestor: Consume(pooling) new listing topic\n    ListingEventIngestor --&gt;&gt; ListValidation.Api: For each new listing item, check if listing item is valid \n    ListValidation.Api -&gt;&gt; ListingEventIngestor: Validation result\n    alt is valid listing item\n        ListingEventIngestor -&gt;&gt; Mongo DB: Add detailed listing information into DB\n        alt if description related key exists in Redis:\n            ListingEventIngestor -&gt;&gt; Elastic Redis: update description related key with elastic listing items\n        else\n            ListingEventIngestor -&gt;&gt; Elastic Redis: Add description related key with elastic listing items\n        end\n        alt if user-key exists in Redis:\n            ListingEventIngestor -&gt;&gt; Elastic Redis: update user-keyed elastic listing items\n        else\n            ListingEventIngestor -&gt;&gt; Elastic Redis: Add user-keyed elastic listing items\n        end\n        ListingEventIngestor -&gt;&gt; Kafka Cluster: Publish user notification event with successful listing\n    else\n        ListingEventIngestor -&gt;&gt; Kafka Cluster: Publish user notification event with unsuccessful listing\n    end\n    Kafka Cluster -&gt;&gt; UserNotificationProcessor: Consume user notification events\n    UserNotificationProcessor -&gt;&gt; User: Sending emails regarding user notification events</code></pre></p> <p>Seach my listings flow. This is for user query a list of items with basic information  <pre><code>sequenceDiagram\n    autonumber\n    User --&gt;&gt; MarketPlaceListing.Api: Search my listing with userId\n    MarketPlaceListing.Api --&gt;&gt; Elastic Redis: Search with user associated key\n    Elastic Redis --&gt;&gt; MarketPlaceListing.Api: Return elastic listing items\n    MarketPlaceListing.Api --&gt; User: Return Elastic searching items</code></pre></p> <p>Seach listings by description flow. This is for user query a list of items with basic information  <pre><code>sequenceDiagram\n    autonumber\n    User --&gt;&gt; MarketPlaceListing.Api: Search my listing with search desciption\n    MarketPlaceListing.Api --&gt;&gt; Elastic Redis: Search with description related key(s)\n    Elastic Redis --&gt;&gt; MarketPlaceListing.Api: Return elastic listing items\n    MarketPlaceListing.Api --&gt; User: Return Elastic searching items</code></pre></p> <p>Seach listings by description flow. This is for user query a list of items with basic information  <pre><code>sequenceDiagram\n    autonumber\n    User --&gt;&gt; MarketPlaceListing.Api: Search listing with search desciption\n    MarketPlaceListing.Api --&gt;&gt; Elastic Redis: Search with description related key(s)\n    Elastic Redis --&gt;&gt; MarketPlaceListing.Api: Return elastic listing items\n    MarketPlaceListing.Api --&gt; User: Return Elastic searching items</code></pre></p> <p>Search Listing by listingId flow, this usually happen after going into details from listing items returned from previous steps.</p> <pre><code>sequenceDiagram\n    autonumber\n    User --&gt;&gt; MarketPlaceListing.Api: Search listing with listingId\n    MarketPlaceListing.Api --&gt;&gt; Mongo DB: Searching listing item details with given listingId\n    Mongo DB --&gt;&gt; MarketPlaceListing.Api: Return detailed listing items\n    MarketPlaceListing.Api --&gt; User: Return detailed listing items</code></pre>"}]}